# Generated by Django 4.2.4 on 2023-09-30 05:33

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('profile_pic', models.ImageField(upload_to='profile/')),
                ('first_name', models.CharField(max_length=250, null=True)),
                ('last_name', models.CharField(max_length=250)),
                ('bio', models.CharField(max_length=200)),
                ('about', models.CharField(max_length=10000)),
                ('user_name', models.CharField(max_length=250, null=True)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('email_otp', models.CharField(max_length=6, null=True)),
                ('password', models.CharField(max_length=350, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('email_verify', models.BooleanField(default=False)),
                ('email_otp_expiry', models.DateTimeField(blank=True, null=True)),
                ('max_otp_try', models.CharField(default=3, max_length=2)),
                ('email_otp_out', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
